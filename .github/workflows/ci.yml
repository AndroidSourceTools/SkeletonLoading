name: CI

on: [push]

jobs:
  build:
    runs-on: macOS-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx5120m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        run: ./gradlew assemble

  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: macOS-latest
    needs: [build]
    env:
      JAVA_TOOL_OPTIONS: -Xmx5120m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Decrypt secrets
        run: release/signing-setup.sh
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Deploy to Sonatype
        run: ./gradlew uploadArchives --no-parallel
        env:
          SONATYPE_NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          SONATYPE_NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Clean secrets
        if: always()
        run: release/signing-cleanup.sh